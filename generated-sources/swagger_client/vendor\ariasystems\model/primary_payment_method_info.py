# coding: utf-8

"""
    Object Query API

    Object Query API for Aria billing  # noqa: E501

    OpenAPI spec version: 23
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PrimaryPaymentMethodInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'billing_first_name': 'str',
        'billing_middle_initial': 'str',
        'billing_last_name': 'str',
        'billing_address1': 'str',
        'billing_address2': 'str',
        'billing_city': 'str',
        'billing_state': 'str',
        'billing_locality': 'str',
        'billing_zip': 'str',
        'billing_country': 'str',
        'billing_intl_phone': 'str',
        'billing_email': 'str',
        'pay_method_type': 'int',
        'cc_expire_mm': 'str',
        'cc_expire_yyyy': 'str',
        'bank_routing_num': 'str',
        'payment_instrument_suffix': 'str',
        'primary_payment_method_name': 'str',
        'primary_payment_method_description': 'str',
        'primary_payment_method_client_defined_id': 'str'
    }

    attribute_map = {
        'billing_first_name': 'billing_first_name',
        'billing_middle_initial': 'billing_middle_initial',
        'billing_last_name': 'billing_last_name',
        'billing_address1': 'billing_address1',
        'billing_address2': 'billing_address2',
        'billing_city': 'billing_city',
        'billing_state': 'billing_state',
        'billing_locality': 'billing_locality',
        'billing_zip': 'billing_zip',
        'billing_country': 'billing_country',
        'billing_intl_phone': 'billing_intl_phone',
        'billing_email': 'billing_email',
        'pay_method_type': 'pay_method_type',
        'cc_expire_mm': 'cc_expire_mm',
        'cc_expire_yyyy': 'cc_expire_yyyy',
        'bank_routing_num': 'bank_routing_num',
        'payment_instrument_suffix': 'payment_instrument_suffix',
        'primary_payment_method_name': 'primary_payment_method_name',
        'primary_payment_method_description': 'primary_payment_method_description',
        'primary_payment_method_client_defined_id': 'primary_payment_method_client_defined_id'
    }

    def __init__(self, billing_first_name=None, billing_middle_initial=None, billing_last_name=None, billing_address1=None, billing_address2=None, billing_city=None, billing_state=None, billing_locality=None, billing_zip=None, billing_country=None, billing_intl_phone=None, billing_email=None, pay_method_type=None, cc_expire_mm=None, cc_expire_yyyy=None, bank_routing_num=None, payment_instrument_suffix=None, primary_payment_method_name=None, primary_payment_method_description=None, primary_payment_method_client_defined_id=None):  # noqa: E501
        """PrimaryPaymentMethodInfo - a model defined in Swagger"""  # noqa: E501

        self._billing_first_name = None
        self._billing_middle_initial = None
        self._billing_last_name = None
        self._billing_address1 = None
        self._billing_address2 = None
        self._billing_city = None
        self._billing_state = None
        self._billing_locality = None
        self._billing_zip = None
        self._billing_country = None
        self._billing_intl_phone = None
        self._billing_email = None
        self._pay_method_type = None
        self._cc_expire_mm = None
        self._cc_expire_yyyy = None
        self._bank_routing_num = None
        self._payment_instrument_suffix = None
        self._primary_payment_method_name = None
        self._primary_payment_method_description = None
        self._primary_payment_method_client_defined_id = None
        self.discriminator = None

        if billing_first_name is not None:
            self.billing_first_name = billing_first_name
        if billing_middle_initial is not None:
            self.billing_middle_initial = billing_middle_initial
        if billing_last_name is not None:
            self.billing_last_name = billing_last_name
        if billing_address1 is not None:
            self.billing_address1 = billing_address1
        if billing_address2 is not None:
            self.billing_address2 = billing_address2
        if billing_city is not None:
            self.billing_city = billing_city
        if billing_state is not None:
            self.billing_state = billing_state
        if billing_locality is not None:
            self.billing_locality = billing_locality
        if billing_zip is not None:
            self.billing_zip = billing_zip
        if billing_country is not None:
            self.billing_country = billing_country
        if billing_intl_phone is not None:
            self.billing_intl_phone = billing_intl_phone
        if billing_email is not None:
            self.billing_email = billing_email
        if pay_method_type is not None:
            self.pay_method_type = pay_method_type
        if cc_expire_mm is not None:
            self.cc_expire_mm = cc_expire_mm
        if cc_expire_yyyy is not None:
            self.cc_expire_yyyy = cc_expire_yyyy
        if bank_routing_num is not None:
            self.bank_routing_num = bank_routing_num
        if payment_instrument_suffix is not None:
            self.payment_instrument_suffix = payment_instrument_suffix
        if primary_payment_method_name is not None:
            self.primary_payment_method_name = primary_payment_method_name
        if primary_payment_method_description is not None:
            self.primary_payment_method_description = primary_payment_method_description
        if primary_payment_method_client_defined_id is not None:
            self.primary_payment_method_client_defined_id = primary_payment_method_client_defined_id

    @property
    def billing_first_name(self):
        """Gets the billing_first_name of this PrimaryPaymentMethodInfo.  # noqa: E501

        First name from the current address instance  # noqa: E501

        :return: The billing_first_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_first_name

    @billing_first_name.setter
    def billing_first_name(self, billing_first_name):
        """Sets the billing_first_name of this PrimaryPaymentMethodInfo.

        First name from the current address instance  # noqa: E501

        :param billing_first_name: The billing_first_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_first_name = billing_first_name

    @property
    def billing_middle_initial(self):
        """Gets the billing_middle_initial of this PrimaryPaymentMethodInfo.  # noqa: E501

        Middle name from the current address instance  # noqa: E501

        :return: The billing_middle_initial of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_middle_initial

    @billing_middle_initial.setter
    def billing_middle_initial(self, billing_middle_initial):
        """Sets the billing_middle_initial of this PrimaryPaymentMethodInfo.

        Middle name from the current address instance  # noqa: E501

        :param billing_middle_initial: The billing_middle_initial of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_middle_initial = billing_middle_initial

    @property
    def billing_last_name(self):
        """Gets the billing_last_name of this PrimaryPaymentMethodInfo.  # noqa: E501

        Last name from the current address instance  # noqa: E501

        :return: The billing_last_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_last_name

    @billing_last_name.setter
    def billing_last_name(self, billing_last_name):
        """Sets the billing_last_name of this PrimaryPaymentMethodInfo.

        Last name from the current address instance  # noqa: E501

        :param billing_last_name: The billing_last_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_last_name = billing_last_name

    @property
    def billing_address1(self):
        """Gets the billing_address1 of this PrimaryPaymentMethodInfo.  # noqa: E501

        BillingAddress1 from the current address instance  # noqa: E501

        :return: The billing_address1 of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_address1

    @billing_address1.setter
    def billing_address1(self, billing_address1):
        """Sets the billing_address1 of this PrimaryPaymentMethodInfo.

        BillingAddress1 from the current address instance  # noqa: E501

        :param billing_address1: The billing_address1 of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_address1 = billing_address1

    @property
    def billing_address2(self):
        """Gets the billing_address2 of this PrimaryPaymentMethodInfo.  # noqa: E501

        BillingAddress2 from the current address instance  # noqa: E501

        :return: The billing_address2 of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_address2

    @billing_address2.setter
    def billing_address2(self, billing_address2):
        """Sets the billing_address2 of this PrimaryPaymentMethodInfo.

        BillingAddress2 from the current address instance  # noqa: E501

        :param billing_address2: The billing_address2 of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_address2 = billing_address2

    @property
    def billing_city(self):
        """Gets the billing_city of this PrimaryPaymentMethodInfo.  # noqa: E501

        City from the current address instance  # noqa: E501

        :return: The billing_city of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_city

    @billing_city.setter
    def billing_city(self, billing_city):
        """Sets the billing_city of this PrimaryPaymentMethodInfo.

        City from the current address instance  # noqa: E501

        :param billing_city: The billing_city of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_city = billing_city

    @property
    def billing_state(self):
        """Gets the billing_state of this PrimaryPaymentMethodInfo.  # noqa: E501

        State from the current address instance  # noqa: E501

        :return: The billing_state of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_state

    @billing_state.setter
    def billing_state(self, billing_state):
        """Sets the billing_state of this PrimaryPaymentMethodInfo.

        State from the current address instance  # noqa: E501

        :param billing_state: The billing_state of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_state = billing_state

    @property
    def billing_locality(self):
        """Gets the billing_locality of this PrimaryPaymentMethodInfo.  # noqa: E501

        Locality from the current address instance  # noqa: E501

        :return: The billing_locality of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_locality

    @billing_locality.setter
    def billing_locality(self, billing_locality):
        """Sets the billing_locality of this PrimaryPaymentMethodInfo.

        Locality from the current address instance  # noqa: E501

        :param billing_locality: The billing_locality of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_locality = billing_locality

    @property
    def billing_zip(self):
        """Gets the billing_zip of this PrimaryPaymentMethodInfo.  # noqa: E501

        Zipcode from the current address instance  # noqa: E501

        :return: The billing_zip of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_zip

    @billing_zip.setter
    def billing_zip(self, billing_zip):
        """Sets the billing_zip of this PrimaryPaymentMethodInfo.

        Zipcode from the current address instance  # noqa: E501

        :param billing_zip: The billing_zip of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_zip = billing_zip

    @property
    def billing_country(self):
        """Gets the billing_country of this PrimaryPaymentMethodInfo.  # noqa: E501

        Country from the current address instance  # noqa: E501

        :return: The billing_country of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_country

    @billing_country.setter
    def billing_country(self, billing_country):
        """Sets the billing_country of this PrimaryPaymentMethodInfo.

        Country from the current address instance  # noqa: E501

        :param billing_country: The billing_country of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_country = billing_country

    @property
    def billing_intl_phone(self):
        """Gets the billing_intl_phone of this PrimaryPaymentMethodInfo.  # noqa: E501

        Intl phone from the current address instance  # noqa: E501

        :return: The billing_intl_phone of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_intl_phone

    @billing_intl_phone.setter
    def billing_intl_phone(self, billing_intl_phone):
        """Sets the billing_intl_phone of this PrimaryPaymentMethodInfo.

        Intl phone from the current address instance  # noqa: E501

        :param billing_intl_phone: The billing_intl_phone of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_intl_phone = billing_intl_phone

    @property
    def billing_email(self):
        """Gets the billing_email of this PrimaryPaymentMethodInfo.  # noqa: E501

        Email from the current address instance  # noqa: E501

        :return: The billing_email of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_email

    @billing_email.setter
    def billing_email(self, billing_email):
        """Sets the billing_email of this PrimaryPaymentMethodInfo.

        Email from the current address instance  # noqa: E501

        :param billing_email: The billing_email of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._billing_email = billing_email

    @property
    def pay_method_type(self):
        """Gets the pay_method_type of this PrimaryPaymentMethodInfo.  # noqa: E501

        pay type from the current billing instance  # noqa: E501

        :return: The pay_method_type of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: int
        """
        return self._pay_method_type

    @pay_method_type.setter
    def pay_method_type(self, pay_method_type):
        """Sets the pay_method_type of this PrimaryPaymentMethodInfo.

        pay type from the current billing instance  # noqa: E501

        :param pay_method_type: The pay_method_type of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: int
        """

        self._pay_method_type = pay_method_type

    @property
    def cc_expire_mm(self):
        """Gets the cc_expire_mm of this PrimaryPaymentMethodInfo.  # noqa: E501

        cc expire months from the current billing instance  # noqa: E501

        :return: The cc_expire_mm of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._cc_expire_mm

    @cc_expire_mm.setter
    def cc_expire_mm(self, cc_expire_mm):
        """Sets the cc_expire_mm of this PrimaryPaymentMethodInfo.

        cc expire months from the current billing instance  # noqa: E501

        :param cc_expire_mm: The cc_expire_mm of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._cc_expire_mm = cc_expire_mm

    @property
    def cc_expire_yyyy(self):
        """Gets the cc_expire_yyyy of this PrimaryPaymentMethodInfo.  # noqa: E501

        cc expire year from the current billing instance  # noqa: E501

        :return: The cc_expire_yyyy of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._cc_expire_yyyy

    @cc_expire_yyyy.setter
    def cc_expire_yyyy(self, cc_expire_yyyy):
        """Sets the cc_expire_yyyy of this PrimaryPaymentMethodInfo.

        cc expire year from the current billing instance  # noqa: E501

        :param cc_expire_yyyy: The cc_expire_yyyy of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._cc_expire_yyyy = cc_expire_yyyy

    @property
    def bank_routing_num(self):
        """Gets the bank_routing_num of this PrimaryPaymentMethodInfo.  # noqa: E501

        bank routing num from the current billing instance  # noqa: E501

        :return: The bank_routing_num of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._bank_routing_num

    @bank_routing_num.setter
    def bank_routing_num(self, bank_routing_num):
        """Sets the bank_routing_num of this PrimaryPaymentMethodInfo.

        bank routing num from the current billing instance  # noqa: E501

        :param bank_routing_num: The bank_routing_num of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._bank_routing_num = bank_routing_num

    @property
    def payment_instrument_suffix(self):
        """Gets the payment_instrument_suffix of this PrimaryPaymentMethodInfo.  # noqa: E501

        suffix from the current billing instance  # noqa: E501

        :return: The payment_instrument_suffix of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._payment_instrument_suffix

    @payment_instrument_suffix.setter
    def payment_instrument_suffix(self, payment_instrument_suffix):
        """Sets the payment_instrument_suffix of this PrimaryPaymentMethodInfo.

        suffix from the current billing instance  # noqa: E501

        :param payment_instrument_suffix: The payment_instrument_suffix of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._payment_instrument_suffix = payment_instrument_suffix

    @property
    def primary_payment_method_name(self):
        """Gets the primary_payment_method_name of this PrimaryPaymentMethodInfo.  # noqa: E501

        Primary payment method name from the current billing instance  # noqa: E501

        :return: The primary_payment_method_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._primary_payment_method_name

    @primary_payment_method_name.setter
    def primary_payment_method_name(self, primary_payment_method_name):
        """Sets the primary_payment_method_name of this PrimaryPaymentMethodInfo.

        Primary payment method name from the current billing instance  # noqa: E501

        :param primary_payment_method_name: The primary_payment_method_name of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._primary_payment_method_name = primary_payment_method_name

    @property
    def primary_payment_method_description(self):
        """Gets the primary_payment_method_description of this PrimaryPaymentMethodInfo.  # noqa: E501

        primary payment method description from the current billing instance  # noqa: E501

        :return: The primary_payment_method_description of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._primary_payment_method_description

    @primary_payment_method_description.setter
    def primary_payment_method_description(self, primary_payment_method_description):
        """Sets the primary_payment_method_description of this PrimaryPaymentMethodInfo.

        primary payment method description from the current billing instance  # noqa: E501

        :param primary_payment_method_description: The primary_payment_method_description of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._primary_payment_method_description = primary_payment_method_description

    @property
    def primary_payment_method_client_defined_id(self):
        """Gets the primary_payment_method_client_defined_id of this PrimaryPaymentMethodInfo.  # noqa: E501

        Primary payment client defined id from the current billing instance  # noqa: E501

        :return: The primary_payment_method_client_defined_id of this PrimaryPaymentMethodInfo.  # noqa: E501
        :rtype: str
        """
        return self._primary_payment_method_client_defined_id

    @primary_payment_method_client_defined_id.setter
    def primary_payment_method_client_defined_id(self, primary_payment_method_client_defined_id):
        """Sets the primary_payment_method_client_defined_id of this PrimaryPaymentMethodInfo.

        Primary payment client defined id from the current billing instance  # noqa: E501

        :param primary_payment_method_client_defined_id: The primary_payment_method_client_defined_id of this PrimaryPaymentMethodInfo.  # noqa: E501
        :type: str
        """

        self._primary_payment_method_client_defined_id = primary_payment_method_client_defined_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PrimaryPaymentMethodInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
